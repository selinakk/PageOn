<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tmtb.pageon.user.mapper.UserMapper">

    <!-- 회원 정보를 저장하는 쿼리 -->
    <insert id="insertUser" parameterType="com.tmtb.pageon.user.model.UserVO">
        INSERT INTO pageon.member (id, pw, name, tel, imgname, reg_date, like_categories, introduce, imgPath)
        VALUES (#{id}, #{pw}, #{name}, #{tel}, #{imgname}, NOW(), #{like_categories}, #{introduce}, #{imgPath})
    </insert>

    <!-- 아이디 중복 체크를 위한 쿼리 -->
    <select id="selectfindUser" parameterType="String" resultType="int">
        SELECT COUNT(*)
        FROM pageon.member
        WHERE id = #{id}
    </select>

    <!-- 특정 회원의 정보 조회 쿼리 -->
    <select id="findById" parameterType="String" resultType="com.tmtb.pageon.user.model.UserVO">
        SELECT id, pw, name, tel, imgname, reg_date, like_categories, introduce, imgPath
        FROM pageon.member
        WHERE id = #{id}
    </select>

    <select id="findByforumPazing" parameterType="map" resultType="com.tmtb.pageon.user.model.ForumVO">
        SELECT num, content_num, title, content, user_id, wdate, report, likes
        FROM pageon.forum
        WHERE user_id = #{id}
        ORDER BY wdate DESC
            LIMIT #{offset}, #{size}
    </select>

    <select id="findBoardsByUserPazing" parameterType="map" resultType="com.tmtb.pageon.user.model.BoardVO">
        SELECT num, title, content, user_id, wdate, img_name, report, category, hitcount
        FROM pageon.board
        WHERE user_id = #{id}
        ORDER BY wdate DESC
            LIMIT #{offset}, #{size}
    </select>

    <select id="findByReviewsPazing" parameterType="map" resultType="com.tmtb.pageon.user.model.ReviewVO">
        SELECT num, work_num, title, content, user_id, wdate, rating, report, hate, `like`
        FROM pageon.review
        WHERE user_id = #{id}
        ORDER BY wdate DESC
            LIMIT #{offset}, #{size}
    </select>

    <select id="findCommentsByUserPazing" parameterType="map" resultType="com.tmtb.pageon.user.model.CommentVO">
        SELECT num, type, content, user_id, wdate, report
        FROM pageon.comment
        WHERE user_id = #{id}
        ORDER BY wdate DESC
            LIMIT #{offset}, #{size}
    </select>

    <select id="findByForum" parameterType="String" resultType="com.tmtb.pageon.user.model.ForumVO">
        SELECT num, content_num, title, content, user_id, wdate, report, likes
        FROM pageon.forum
        WHERE user_id = #{id}
        ORDER BY wdate DESC
    </select>

    <select id="findByBoard" parameterType="String" resultType="com.tmtb.pageon.user.model.BoardVO">
        SELECT num, title, content, user_id, wdate, img_name, report, category, hitcount
        FROM pageon.board
        WHERE user_id = #{id}
        ORDER BY wdate DESC
    </select>

    <select id="findByReviews" parameterType="String" resultType="com.tmtb.pageon.user.model.ReviewVO">
        SELECT num, work_num, title, content, user_id, wdate, rating, report, hate, `like`
        FROM pageon.review
        WHERE user_id = #{id}
        ORDER BY wdate DESC
    </select>

    <select id="findByComment" parameterType="String" resultType="com.tmtb.pageon.user.model.CommentVO">
        SELECT num, type, content, user_id, wdate, report
        FROM pageon.comment
        WHERE user_id = #{id}
        ORDER BY wdate DESC
    </select>


    <!-- 사용자 카테고리 업데이트 쿼리 -->
    <update id="updateCategories">
        UPDATE member
        SET like_categories = #{likeCategories}
        WHERE id = #{id}
    </update>

    <!-- 회원정보 수정 쿼리 -->
    <update id="updateUserInfo" parameterType="com.tmtb.pageon.user.model.UserVO">
        UPDATE pageon.member
        SET pw = #{pw}, name = #{name}, tel = #{tel}, imgname = #{imgname}, introduce = #{introduce}, imgPath = #{imgPath}
        WHERE id = #{id}
    </update>




</mapper>
